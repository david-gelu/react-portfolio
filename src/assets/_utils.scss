@use "./variables.scss" as *;

main {
  width: 78vw;
  margin: 1em auto;
  padding-inline: 1em;
}

.left {
  text-align: left;
}

.title-text {
  // text-align: center;

  & :is(h3, h4, h5) {
    color: $text-with-transparency;
    background-clip: text;
    background-repeat: no-repeat;
    background-size: 100% 0%;
    background-image: linear-gradient(180deg, $text-color 50%, $text-color);
    animation: text-reveal linear forwards;
    animation-timeline: view();
    transition: color 0.3s ease-in-out;
  }

  & :is(h2) {
    margin-top: min(20vmin, 15em);
    margin-bottom: min(10vmin, 7em);
    // animation-range-start: cover calc(10dvh + min(10vmin, 7em));
    // animation-range-end: cover 25dvh;
  }

  & :is(h3, h4, h5) {
    animation-range-start: cover 25.5dvh;
    animation-range-end: cover 50dvh;
  }
  & > :is(h3) {
    margin-block: min(10vmin, 7em);
  }
}

@keyframes text-reveal {
  to {
    background-size: 100% 100%;
  }
}

.fancy-border {
  position: relative;
  padding: 0.5em;
  border-radius: 10%;
  background:
    linear-gradient($bg-color, $bg-color) padding-box,
    linear-gradient(-45deg, $link-color, transparent 25%, transparent 75%, $link-color) border-box;
  border: 0.4em solid transparent;
}

@mixin display($align: null, $justify: null, $direction: null) {
  display: flex;
  align-items: $align;
  justify-content: $justify;
  flex-direction: $direction;
}

.loading {
  min-height: 100vh;
  min-width: 100vw;
  color: $text-color;
  font-size: 2rem;
  background: $bg-color;
  @include display(center, center);
}

.loading-modal {
  min-height: 10vh;
  min-width: 10vw;
  color: $text-color;
  font-size: 2rem;
  background: $second-color;
  @include display(center, center);
}

.modal-content {
  background-color: $text-color;
}

.carousel-indicators button {
  width: 0.8em !important;
  height: 0.8em !important;
  border-radius: 50%;
}

.carousel-indicators > button {
  background-color: $text-color !important;
  border: 3px solid #302f2f !important;

  &.active {
    border: 3px solid #302f2f !important;
    background-color: #414141 !important;
  }

  &:not(:first-child) {
    margin-left: 0.5rem;
  }
}

.tooltip {
  &.events-none {
    pointer-events: none;
  }

  &.bs-tooltip-start .tooltip-arrow::before {
    border-left-color: $link-color;
  }

  &.bs-tooltip-top .tooltip-arrow::before {
    border-top-color: $link-color;
  }

  &.bs-tooltip-end .tooltip-arrow::before {
    border-right-color: $link-color;
  }

  &.bs-tooltip-bottom .tooltip-arrow::before {
    border-bottom-color: $link-color;
  }

  .tooltip-inner {
    border-radius: calc(0.3em - 1px);
    color: $link-color;
    background-color: $bg-color;
    border: 1px solid $link-color;
  }
}

.fs-small {
  font-size: clamp(0.75rem, 1.8vh - 0.1rem, 0.75rem);
  font-weight: 500;
  line-height: 1.6;
}
.mw-25 {
  max-width: 25%;
  min-width: 100%;
}
